#ifndef BITMAPS_H
#define BITMAPS_H

// none solid tiles
#define TILE_WHITE              0
#define TILE_GRASS              1
#define TILE_FLOWER             2
#define TILE_TILES              3
#define TILE_TILES_WEAT         4
#define TILE_SAND               5
#define TILE_PEBBLES            6
#define TILE_LEAVES             7
#define TILE_FLOOR              8
#define TILE_STAIRS             9
#define TILE_SHALLOW_WATER_ONE  10
#define TILE_SHALLOW_WATER_TWO  11
#define TILE_LILY_ONE           12
#define TILE_LILY_TWO           13

// solid tiles
#define TILE_DEEP_WATER_ONE     14
#define TILE_DEEP_WATER_TWO     15
#define TILE_BORDER_UP_LEFT     16
#define TILE_BORDER_UP_RIGHT    17
#define TILE_BORDER_LOW_RIGHT   18
#define TILE_BORDER_LOW_LEFT    19
#define TILE_ROCK_UP_LEFT       20
#define TILE_ROCK_UP_RIGHT      21
#define TILE_ROCK_LOW_RIGHT     22
#define TILE_ROCK_LOW_LEFT      23
#define TILE_BORDER_UP          24
#define TILE_BORDER_RIGHT       25
#define TILE_BORDER_LOW         26
#define TILE_BORDER_LEFT        27
#define TILE_STONE_LOW_LEFT     28
#define TILE_STONE_LOW_MID      29
#define TILE_STONE_LOW_RIGHT    30
#define TILE_ROCK               31
#define TILE_CORN               32
#define TILE_TREE_UP_LEFT       33
#define TILE_TREE_UP_MID        34
#define TILE_TREE_UP_RIGHT      35
#define TILE_TREE_LOW_LEFT      36
#define TILE_TREE_LOW_RIGHT     37
#define TILE_TREE_TREE_LEFT     38
#define TILE_TREE_TREE_RIGHT    39
#define TILE_WINDOW             40
#define TILE_DOOR               41
#define TILE_GATE               42
#define TILE_ROOF               43
#define TILE_SHOP               44
#define TILE_INN                45
#define TILE_SKULL              46
#define TILE_WALL               47
#define TILE_BED_LOW            48
#define TILE_BED_UP             49
#define TILE_SHELVE_LOW         50
#define TILE_SHELVE_UP          51
#define TILE_TABLE              52
#define TILE_STOOL              53
#define TILE_BARREL             54
#define TILE_BLACK              55
#define TILE_SIGN               56
#define TILE_CLOSED_BOX         57
#define TILE_OPEN_BOX           58


///////////////// Menu bitmaps ////////////////////
///////////////////////////////////////////////////
const unsigned char PROGMEM titleSwordGrip[] =
{
  // width, height,
  8, 16,
  0x02, 0x0f, 0x59, 0x52, 0x52, 0x59, 0x0f, 0x02,
  0x00, 0x00, 0x55, 0x55, 0x55, 0x55, 0x00, 0x00,
};

const unsigned char PROGMEM titleSwordGuard[] =
{
  // width, height,
  24, 8,
  0x19, 0x7d, 0xe2, 0xdf, 0x3f, 0x3b, 0x15, 0x11, 0x1f, 0x9f, 0xd9, 0xd2, 0x12, 0xd9, 0x9f, 0x1f, 0x11, 0x15, 0x3b, 0x3f, 0xdd, 0xe2, 0x7d, 0x19,
};


const unsigned char PROGMEM titleText[] =
{
  // width, height,
  96, 24,
  0x00, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0xfe, 0xfe, 0xfc, 0x8e, 0x8e, 0xfe, 0xfc, 0xf8, 0x00, 0xec, 0xfc, 0xfc, 0x1c, 0x3c, 0xfc, 0xf8, 0xf0, 0x00, 0xf8, 0xf8, 0xf8, 0x00, 0x00, 0xf8, 0xf8, 0xf8, 0x00, 0x78, 0xf8, 0xf8, 0x01, 0x00, 0xf8, 0xf8, 0x78, 0x00, 0xfb, 0xfb, 0xfb, 0x38, 0x33, 0x3b, 0x38, 0x00, 0xf8, 0xf8, 0xf8, 0xf1, 0xc0, 0x00, 0xf8, 0xf8, 0xf8, 0x00, 0x38, 0x38, 0xf8, 0xf8, 0x70, 0x38, 0x38, 0x00, 0xfc, 0xfc, 0xfc, 0x00, 0x00, 0xfc, 0xfc, 0xfc, 0x00, 0xf6, 0xfe, 0xfe, 0x8e, 0x8e, 0xfe, 0xfc, 0xf8, 0x00, 0xfb, 0xff, 0xff, 0x8f, 0x8f, 0x8f, 0x8f,
  0xdc, 0xff, 0xff, 0x71, 0x71, 0xff, 0xff, 0xfc, 0x00, 0xff, 0xff, 0xff, 0x07, 0x1f, 0xff, 0xfd, 0xf0, 0x00, 0xff, 0xff, 0x7f, 0xe0, 0xf0, 0xff, 0x7f, 0x3f, 0x00, 0x1f, 0x3f, 0x7f, 0x70, 0x70, 0x7f, 0x3f, 0x1e, 0x00, 0x00, 0x0f, 0x7f, 0x3f, 0x7f, 0x7f, 0x0f, 0x00, 0x00, 0x6f, 0x7f, 0x7f, 0x73, 0x73, 0x73, 0x73, 0x00, 0x7f, 0x7f, 0x7f, 0x01, 0x07, 0x1f, 0x7f, 0x7f, 0x7b, 0x00, 0x00, 0x00, 0x7f, 0x7f, 0x7f, 0x00, 0x00, 0x00, 0x3f, 0x7f, 0xff, 0xe0, 0xe0, 0xff, 0x7f, 0x37, 0x00, 0xff, 0xff, 0xff, 0x07, 0x1f, 0xff, 0xfd, 0xf0, 0x00, 0xff, 0xff, 0xff, 0xc7, 0x87, 0xc7, 0xc7,
  0x03, 0x03, 0x03, 0x00, 0x00, 0x03, 0x03, 0x03, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x09, 0xf9, 0x09, 0x00, 0xf8, 0x28, 0xd0, 0x00, 0xf0, 0x28, 0xf0, 0x00, 0xf8, 0x00, 0xf8, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x88, 0x70, 0x00, 0xf8, 0x28, 0x08, 0x00, 0x00, 0xff, 0xff, 0xf7, 0x08, 0xfb, 0x0b, 0x00, 0xf8, 0x20, 0xf8, 0x00, 0xf8, 0xa8, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xa8, 0x50, 0x00, 0xf8, 0x80, 0x80, 0x00, 0xf0, 0x28, 0xf0, 0x00, 0xf8, 0x88, 0x70, 0x00, 0xf9, 0xa9, 0x89, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
};

const unsigned char PROGMEM titleSword[] =
{
  // width, height,
  6, 16,
  0xff, 0xff, 0xff, 0x00, 0xfe, 0xff,
  0x0f, 0x3f, 0xff, 0x00, 0x3f, 0x0f,
};

const unsigned char PROGMEM titleStartMask[] =
{
  // width, height,
  6, 8,
  0x7e, 0x3f, 0x1f, 0x3f, 0x7e, 0x3e
};



////////// Font bitmaps //////////////////////
//////////////////////////////////////////////
PROGMEM const unsigned char font[] = {
  // width, height
  5, 8,
  // SPACE on PLACE 0
  0x00, 0x00, 0x00, 0x00, 0x00,
  // CHARACTER A on PLACE 1
  0x1E, 0x05, 0x05, 0x05, 0x1E,
  // CHARACTER B on PLACE 2
  0x1F, 0x15, 0x15, 0x15, 0x0A,
  // CHARACTER C on PLACE 3
  0x0E, 0x11, 0x11, 0x11, 0x0A,
  // CHARACTER D on PLACE 4
  0x1F, 0x11, 0x11, 0x11, 0x0E,
  // CHARACTER E on PLACE 5
  0x1F, 0x15, 0x15, 0x15, 0x11,
  // CHARACTER F on PLACE 6
  0x1F, 0x05, 0x05, 0x05, 0x01,
  // CHARACTER G on PLACE 7
  0x0E, 0x11, 0x11, 0x15, 0x1D,
  // CHARACTER H on PLACE 8
  0x1F, 0x04, 0x04, 0x04, 0x1F,
  // CHARACTER I on PLACE 9
  0x00, 0x11, 0x1F, 0x11, 0x00,
  // CHARACTER J on PLACE 10
  0x10, 0x11, 0x0F, 0x01, 0x00,
  // CHARACTER K on PLACE 11
  0x1F, 0x04, 0x04, 0x0A, 0x11,
  // CHARACTER L on PLACE 12
  0x1F, 0x10, 0x10, 0x10, 0x10,
  // CHARACTER M on PLACE 13
  0x1F, 0x02, 0x04, 0x02, 0x1F,
  // CHARACTER N on PLACE 14
  0x1F, 0x02, 0x04, 0x08, 0x1F,
  // CHARACTER O on PLACE 15
  0x0E, 0x11, 0x11, 0x11, 0x0E,
  // CHARACTER P on PLACE 16
  0x1F, 0x05, 0x05, 0x05, 0x02,
  // CHARACTER Q on PLACE 17
  0x0E, 0x11, 0x11, 0x09, 0x16,
  // CHARACTER R on PLACE 18
  0x1F, 0x05, 0x05, 0x0D, 0x12,
  // CHARACTER S on PLACE 19
  0x12, 0x15, 0x15, 0x15, 0x09,
  // CHARACTER T on PLACE 20
  0x01, 0x01, 0x1F, 0x01, 0x01,
  // CHARACTER U on PLACE 21
  0x0F, 0x10, 0x10, 0x10, 0x0F,
  // CHARACTER V on PLACE 22
  0x03, 0x0C, 0x10, 0x0C, 0x03,
  // CHARACTER W on PLACE 23
  0x1F, 0x08, 0x04, 0x08, 0x1F,
  // CHARACTER X on PLACE 24
  0x11, 0x0A, 0x04, 0x0A, 0x11,
  // CHARACTER Y on PLACE 25
  0x01, 0x02, 0x1C, 0x02, 0x01,
  // CHARACTER Z on PLACE 26
  0x11, 0x19, 0x15, 0x13, 0x11,
  // CHARACTER 0 on PLACE 27
  0x0E, 0x19, 0x15, 0x13, 0x0E,
  // CHARACTER 1 on PLACE 28
  0x00, 0x12, 0x1F, 0x10, 0x00,
  // CHARACTER 2 on PLACE 29
  0x19, 0x15, 0x15, 0x15, 0x12,
  // CHARACTER 3 on PLACE 30
  0x11, 0x15, 0x15, 0x15, 0x0A,
  // CHARACTER 4 on PLACE 31
  0x07, 0x04, 0x04, 0x1E, 0x04,
  // CHARACTER 5 on PLACE 32
  0x17, 0x15, 0x15, 0x15, 0x09,
  // CHARACTER 6 on PLACE 33
  0x0E, 0x15, 0x15, 0x15, 0x08,
  // CHARACTER 7 on PLACE 34
  0x01, 0x01, 0x19, 0x05, 0x03,
  // CHARACTER 8 on PLACE 35
  0x0A, 0x15, 0x15, 0x15, 0x0A,
  // CHARACTER 9 on PLACE 36
  0x02, 0x15, 0x15, 0x15, 0x0E,
  // CHARACTER . on PLACE 37
  0x00, 0x00, 0x10, 0x00, 0x00,
  // CHARACTER , on PLACE 38
  0x00, 0x20, 0x10, 0x00, 0x00,
  // CHARACTER ! on PLACE 39
  0x00, 0x00, 0x17, 0x00, 0x00,
  // CHARACTER ? on PLACE 40
  0x00, 0x01, 0x15, 0x03, 0x00,
  // CHARACTER ' on PLACE 41
  0x00, 0x00, 0x03, 0x00, 0x00,
  // CHARACTER : on PLACE 42
  0x00, 0x12, 0x00, 0x00, 0x00,
  // CHARACTER / on PLACE 43
  0x10, 0x08, 0x04, 0x02, 0x01,
  // arrow right on PLACE 44
  0x00, 0x1F, 0x1F, 0x0E, 0x04,
  // arrow left  on PLACE 45
  0x04, 0x0E, 0x1F, 0x1F, 0x00,
  // arrow up    on PLACE 46
  0x0C, 0x0E, 0x0F, 0x0E, 0x0C,
  // arrow down  on PLACE 47
  0x06, 0x0E, 0x1E, 0x0E, 0x06,
  // diamond     on place 48
  0x04, 0x0E, 0x1F, 0x0E, 0x04,
  // â‚¬           on place 49
  0x04, 0x0E, 0x15, 0x15, 0x04,
  // _           on place 50
  0x10, 0x10, 0x10, 0x10, 0x10,
  // *           on place 51
  0x00, 0x0A, 0x04, 0x0A, 0x00,
  // (           on place 52
  0x00, 0x00, 0x0E, 0x11, 0x00,
  // )           on place 53
  0x00, 0x00, 0x11, 0x0E, 0x00,
  // +           on place 54
  0x00, 0x04, 0x0E, 0x04, 0x00,
  // -           on place 55
  0x00, 0x04, 0x04, 0x04, 0x00,
  // full        on place 56
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
};


////////// Player bitmaps ////////////////////
//////////////////////////////////////////////
const unsigned char PROGMEM eyesBlinking[] =
{
  // width, height,
  4, 8,
  // FRAME 00
  0x03, 0x00, 0x00, 0x03,
  // FRAME 01
  0x01, 0x00, 0x00, 0x01,
  // FRAME 02
  0x00, 0x00, 0x00, 0x00,
};

const unsigned char PROGMEM playerHead_plus_mask[] =
{
  // width, height,
  12, 8,
  // FRAME 00
  0x00, 0xd8, 0xc8, 0xfc, 0x1c, 0xfe, 0xa4, 0xfe, 0x5a, 0xff, 0xde, 0xff,
  0xee, 0xff, 0x5e, 0xff, 0xbc, 0xfe, 0x34, 0xfe, 0xc8, 0xfc, 0x00, 0xd8,

  // FRAME 01
  0x00, 0x1c, 0x1c, 0xfe, 0xda, 0xff, 0x6c, 0xfe, 0xde, 0xff, 0x3e, 0xff,
  0xbe, 0xff, 0x7e, 0xff, 0xf4, 0xfe, 0x68, 0xfc, 0x00, 0x68, 0x00, 0x00,

  // FRAME 02
  0x00, 0x68, 0x68, 0xfc, 0xf4, 0xfe, 0xfc, 0xfe, 0xfe, 0xff, 0xfe, 0xff,
  0xfe, 0xff, 0xfe, 0xff, 0xfc, 0xfe, 0xfc, 0xfe, 0x68, 0xfc, 0x00, 0x68,

  // FRAME 03
  0x00, 0x00, 0x00, 0x68, 0x68, 0xfc, 0xf4, 0xfe, 0x7e, 0xff, 0xbe, 0xff,
  0x3e, 0xff, 0xde, 0xff, 0x6c, 0xfe, 0xda, 0xff, 0x1c, 0xfe, 0x00, 0x1c,
};

const unsigned char PROGMEM playerFeet_plus_mask[] =
{
  // width, height,
  12, 8,
  // FRAME 00
  0x00, 0x01, 0x01, 0x07, 0x04, 0x0f, 0x03, 0x7f, 0x54, 0xff, 0x57, 0xff,
  0x07, 0x7f, 0x34, 0x7f, 0x3b, 0x7f, 0x00, 0x3f, 0x01, 0x03, 0x00, 0x01,

  // FRAME 01
  0x00, 0x00, 0x00, 0x19, 0x18, 0x7f, 0x45, 0xff, 0x5a, 0xff, 0x0b, 0x7f,
  0x13, 0x7f, 0x5a, 0xff, 0x45, 0xff, 0x18, 0x7f, 0x00, 0x19, 0x00, 0x00,

  // FRAME 02
  0x00, 0x01, 0x01, 0x03, 0x00, 0x3f, 0x3b, 0x7f, 0x34, 0x7f, 0x07, 0x7f,
  0x57, 0xff, 0x54, 0xff, 0x03, 0x7f, 0x04, 0x0f, 0x01, 0x07, 0x00, 0x01,

  // FRAME 03
  0x00, 0x00, 0x00, 0x1b, 0x1b, 0x7f, 0x18, 0xff, 0x07, 0xff, 0x16, 0x7f,
  0x1b, 0x7f, 0x50, 0xff, 0x45, 0xff, 0x1c, 0x7f, 0x00, 0x1c, 0x00, 0x00,

  // FRAME 04
  0x00, 0x00, 0x00, 0x01, 0x01, 0x03, 0x02, 0x5f, 0x43, 0xff, 0x5b, 0xff,
  0x19, 0xff, 0x24, 0x7f, 0x02, 0x3f, 0x0e, 0x1f, 0x00, 0x0e, 0x00, 0x00,

  // FRAME 05
  0x00, 0x00, 0x00, 0x5b, 0x43, 0xff, 0x54, 0xff, 0x17, 0x7f, 0x16, 0x7f,
  0x03, 0x7f, 0x18, 0xff, 0x19, 0xff, 0x04, 0x7f, 0x00, 0x1c, 0x00, 0x00,

  // FRAME 06
  0x00, 0x00, 0x00, 0x33, 0x31, 0x7f, 0x33, 0x7f, 0x05, 0x7f, 0x2d, 0x7f,
  0x2d, 0xff, 0x35, 0xff, 0x03, 0x7f, 0x05, 0x0f, 0x00, 0x07, 0x00, 0x00,

  // FRAME 07
  0x00, 0x00, 0x00, 0x19, 0x18, 0x7f, 0x41, 0xff, 0x5a, 0xff, 0x16, 0x7f,
  0x16, 0x7f, 0x5a, 0xff, 0x41, 0xff, 0x18, 0x7f, 0x00, 0x19, 0x00, 0x00,

  // FRAME 08
  0x00, 0x01, 0x00, 0x07, 0x05, 0x0f, 0x03, 0x7f, 0x35, 0xff, 0x2d, 0xff,
  0x2d, 0x7f, 0x05, 0x7f, 0x33, 0x7f, 0x31, 0x7f, 0x00, 0x33, 0x00, 0x00,

  // FRAME 09
  0x00, 0x00, 0x00, 0x1c, 0x04, 0x7f, 0x19, 0xff, 0x18, 0xff, 0x03, 0x7f,
  0x16, 0x7f, 0x17, 0x7f, 0x54, 0xff, 0x43, 0xff, 0x00, 0x5b, 0x00, 0x00,

  // FRAME 10
  0x00, 0x00, 0x00, 0x0e, 0x0e, 0x1f, 0x02, 0x3f, 0x24, 0x7f, 0x19, 0xff,
  0x5b, 0xff, 0x43, 0xff, 0x02, 0x5f, 0x01, 0x03, 0x00, 0x01, 0x00, 0x00,

  // FRAME 11
  0x00, 0x00, 0x00, 0x1c, 0x1c, 0x7f, 0x45, 0xff, 0x50, 0xff, 0x1b, 0x7f,
  0x16, 0x7f, 0x07, 0xff, 0x18, 0xff, 0x1b, 0x7f, 0x00, 0x1b, 0x00, 0x00,
};

const unsigned char PROGMEM playerDead[] =
{
  // width, height,
  16, 16,
  // FRAME 00
  0x00, 0x00, 0x90, 0x68, 0xc4, 0xb4, 0x4a, 0x42, 0x22, 0x42, 0x84, 0x94, 0x68, 0x90, 0x00, 0x00,
  0x00, 0x00, 0x01, 0x62, 0xff, 0x96, 0x9a, 0xe8, 0xf8, 0xca, 0xce, 0xbf, 0x62, 0x01, 0x00, 0x00,
};

////////// enemy data //////////////////

////////// enemy sprites ///////////////////
///////////////////////////////////////////
PROGMEM const unsigned char enemyHeads[] = {
  // Bitmap Image. No transparency
  // Width: 14 Height: 8
  14, 8, 
  // Frame 0
  0xFF, 0xFF, 0xFF, 0x1F, 0xAF, 0xEF, 0xAF, 0xEF, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  // Frame 1
  0xFF, 0xFF, 0x0F, 0x57, 0x7B, 0xDB, 0xF5, 0xF1, 0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  // Frame 2
  0xFF, 0xF1, 0x85, 0x2B, 0xBD, 0xBD, 0x6D, 0xFD, 0xFB, 0x05, 0xF1, 0xFF, 0xFF, 0xFF, 
  // Frame 3
  0xE7, 0xEB, 0x81, 0xAD, 0x3E, 0x2E, 0x76, 0xFE, 0xF2, 0x0D, 0xED, 0xEB, 0xE7, 0xFF, 
  // Frame 4
  0xFF, 0xFF, 0x3F, 0xDF, 0xEF, 0xAF, 0xE7, 0x67, 0x57, 0x2F, 0x1F, 0xFF, 0xFF, 0xFF, 
  // Frame 5
  0xFF, 0xFF, 0x9F, 0x4F, 0xF7, 0xF7, 0x53, 0x73, 0xB3, 0x2B, 0x17, 0xCF, 0xFF, 0xFF, 
  // Frame 6
  0xFF, 0xC7, 0x93, 0x5D, 0xDD, 0x75, 0x7D, 0xBD, 0x99, 0x05, 0x1B, 0xEB, 0xF7, 0xFF, 
  // Frame 7
  0xD3, 0x85, 0x46, 0x4E, 0x7E, 0x76, 0xBA, 0xDE, 0x89, 0x05, 0x1B, 0xBB, 0xD7, 0xCF, 
  // Frame 8
  0xFF, 0xFF, 0xFF, 0x1F, 0xAF, 0xF7, 0xB7, 0xF7, 0xF7, 0x6F, 0x1F, 0xFF, 0xFF, 0xFF, 
  // Frame 9
  0xFF, 0xFF, 0x0F, 0xD7, 0x7B, 0xFB, 0xDB, 0xFB, 0x7B, 0x77, 0x37, 0x0F, 0xFF, 0xFF, 
  // Frame 10
  0xFF, 0x87, 0x4B, 0xFD, 0x7D, 0xCD, 0x7D, 0xFD, 0x7D, 0x3B, 0x7B, 0x37, 0x8F, 0xFF, 
  // Frame 11
  0x87, 0x43, 0xED, 0x7D, 0xFE, 0x6E, 0xC6, 0xF6, 0x7E, 0x3E, 0x7D, 0x3B, 0x1B, 0x87, 
};

PROGMEM const unsigned char enemyFeet[] = {
  // Bitmap Image. No transparency
  // Width: 16 Height: 8
  16, 8, 
  // Frame 0
  0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0xDB, 0x9B, 0x9B, 0xAD, 0xB0, 0x97, 0xA7, 0xDB, 0xE3, 0xFF, 0xFF, 
  // Frame 1
  0xFF, 0xF1, 0xF6, 0xF8, 0xFC, 0xFC, 0xFC, 0xF2, 0xEC, 0xE0, 0xF2, 0xEC, 0xF0, 0xF6, 0xF9, 0xFF, 
  // Frame 2
  0xDF, 0xAF, 0xBF, 0x67, 0x40, 0x51, 0x55, 0x55, 0x43, 0x5F, 0x58, 0x46, 0x6D, 0xA6, 0xA8, 0xDF, 
  // Frame 3
  0xFF, 0xFF, 0xDF, 0xAE, 0xBE, 0x7E, 0x7C, 0x61, 0x6C, 0x72, 0x74, 0xBA, 0xAD, 0xDF, 0xFF, 0xFF, 
  // Frame 4
  0xFF, 0xBF, 0x7F, 0x93, 0x34, 0x05, 0x31, 0x49, 0x11, 0x36, 0x96, 0x7A, 0xBC, 0xFF, 0xFF, 0xFF, 
  // Frame 5
  0xFF, 0xFF, 0xFF, 0x9F, 0xAE, 0xAC, 0x90, 0x8C, 0x78, 0x60, 0x0C, 0xAE, 0x9F, 0xFF, 0xFF, 0xFF, 
  // Frame 6
  0xC3, 0xA1, 0xF0, 0xA3, 0xC0, 0x87, 0x63, 0xF1, 0x63, 0x80, 0xC7, 0xA1, 0xF3, 0xA1, 0xC7, 0xFF, 
};

////////// boss sprites ///////////////////
///////////////////////////////////////////
PROGMEM const unsigned char bossSprites[] = {
  // Bitmap Image. No transparency
  // Width: 24 Height: 24
  24, 24, 
  // Frame 0
  0xFF, 0xFF, 0xFF, 0xFF, 0xE7, 0xD7, 0x2F, 0x27, 0x2B, 0x2D, 0x6D, 0x5E, 0x56, 0xD6, 0x8E, 0x8E, 0x06, 0xE5, 0xED, 0x9B, 0x47, 0xBF, 0xFF, 0xFF, 
  0xDF, 0xED, 0x2D, 0xC3, 0xD7, 0xB1, 0xA6, 0x03, 0xA7, 0x22, 0x24, 0x15, 0xCA, 0xCE, 0xE4, 0xF0, 0xD1, 0x30, 0xB9, 0xA3, 0xC3, 0x35, 0xED, 0xDB, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF9, 0xF4, 0xF9, 0xFC, 0xF8, 0x84, 0x67, 0x01, 0xF7, 0xF6, 0xF9, 0xFB, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  // Frame 1
  0xFF, 0x7F, 0xBF, 0xBF, 0xBF, 0xBF, 0x7F, 0x7F, 0xFF, 0x7F, 0xBF, 0x3F, 0x7F, 0x7F, 0xBF, 0xBF, 0xBF, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFC, 0x7A, 0xF8, 0x72, 0xE1, 0xE1, 0x65, 0x02, 0x02, 0x0A, 0x05, 0x95, 0x0D, 0x0A, 0xAA, 0xD4, 0xE4, 0xFB, 0xE7, 0x1F, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xF2, 0xED, 0xDA, 0xD5, 0xB6, 0xAE, 0xAD, 0xAE, 0xAE, 0xAD, 0xAE, 0xAE, 0xA6, 0xA7, 0xA7, 0xA3, 0xA3, 0xA9, 0xB7, 0xD4, 0xDB, 0xED, 0xF3, 
  // Frame 2
  0xFF, 0xFF, 0xFF, 0xFF, 0x8F, 0x77, 0xEF, 0x87, 0x03, 0xC7, 0xF3, 0xE1, 0x80, 0xE3, 0xC7, 0x7B, 0x87, 0xFF, 0x7F, 0xBF, 0x7F, 0xBF, 0x7F, 0xFF, 
  0xFF, 0x7F, 0xBF, 0xDF, 0x57, 0x28, 0x85, 0xE7, 0xF7, 0xEF, 0xCF, 0xAF, 0xCF, 0x77, 0xFF, 0x90, 0x6F, 0x60, 0x45, 0x4B, 0xA7, 0xC3, 0xF5, 0xF8, 
  0xFC, 0xFB, 0xF4, 0xE9, 0xD2, 0xCC, 0xD8, 0xD9, 0xCC, 0xD9, 0xB8, 0xBD, 0x78, 0x8E, 0xDF, 0xC7, 0xEC, 0xEB, 0xF7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  // Frame 3
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x9F, 0x2F, 0x7F, 0xFF, 0x3F, 0x06, 0x01, 0x03, 0x1F, 0x3F, 0x7F, 0x3F, 0x17, 0x0F, 0x3F, 0xFF, 0xFF, 
  0x7F, 0xBF, 0x1F, 0x43, 0x85, 0x0F, 0x07, 0x41, 0xE0, 0xE0, 0xF0, 0xF0, 0x70, 0x70, 0x30, 0xE0, 0xE0, 0xD2, 0xA4, 0x69, 0x7E, 0x78, 0xB6, 0xC1, 
  0xF8, 0xF6, 0xEF, 0xEF, 0xEC, 0xE6, 0xC0, 0xC5, 0xAC, 0x47, 0x47, 0x4C, 0x44, 0x65, 0x46, 0x67, 0xB3, 0xDC, 0xE1, 0xF8, 0xFE, 0xFF, 0xFF, 0xFF, 
};


////////// worldmap data //////////////////

////////// worldmap tiles /////////////////
///////////////////////////////////////////
const unsigned char PROGMEM tileSheet[] =
{
  // width, height,
  16, 16,
  // TILE 00
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  // TILE 01
  0xff, 0xff, 0xe3, 0xc7, 0xff, 0xe7, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 0xc7, 0xff, 0xe7, 0xf3, 0xff, 0xff,
  // TILE 02
  0xff, 0xff, 0xe7, 0xe7, 0x99, 0x99, 0xe7, 0xe7, 0xff, 0xff, 0xf9, 0xf3, 0xff, 0xe3, 0xf1, 0xff,
  0xff, 0xff, 0xe3, 0xc7, 0xff, 0xe7, 0xf3, 0xff, 0xff, 0xf3, 0xf3, 0xcc, 0xcc, 0xf3, 0xf3, 0xff,
  // TILE 03
  0xaf, 0x7b, 0x7f, 0x7d, 0x7f, 0x7d, 0xab, 0xff, 0xeb, 0xbd, 0x7f, 0x7d, 0x7f, 0x7d, 0xab, 0xff,
  0xab, 0x7d, 0x7f, 0x7d, 0x7f, 0x7b, 0xaf, 0xff, 0xab, 0x7d, 0x7f, 0x7d, 0x7f, 0xbd, 0xeb, 0xff,
  // TILE 04
  0xab, 0x7d, 0x7f, 0x7d, 0x7f, 0x7d, 0xab, 0xff, 0xff, 0xe3, 0xc7, 0xff, 0xe7, 0xf3, 0xff, 0xff,
  0xab, 0x7d, 0x7f, 0x7f, 0x7d, 0x7b, 0xaf, 0xff, 0xeb, 0xbd, 0x7f, 0x7d, 0x7f, 0x7d, 0xab, 0xff,
  // TILE 05
  0xff, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xbf, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xff, 0xf7, 0xff,
  0xff, 0xfb, 0xff, 0xff, 0xff, 0xdf, 0xff, 0x7f, 0xff, 0xff, 0xff, 0xfd, 0xff, 0xff, 0xff, 0xbf,
  // TILE 06
  0xff, 0xff, 0x7f, 0x7f, 0xfb, 0xff, 0xef, 0xc7, 0xdb, 0xdb, 0xdb, 0xd6, 0xcf, 0xff, 0xff, 0xdf,
  0xfe, 0xdc, 0xfd, 0xfd, 0xfc, 0xfd, 0xdf, 0xff, 0xf7, 0xe3, 0xed, 0x6d, 0xed, 0xf3, 0xf7, 0xff,
  // TILE 07
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0xf1, 0xe9, 0xd5, 0xdb, 0xd7, 0xcf, 0xff,
  0xff, 0xff, 0xcf, 0xd7, 0xdb, 0xd5, 0xe9, 0xf1, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  // TILE 08
  0xfe, 0xfd, 0xfb, 0xf7, 0xe7, 0xdb, 0xbd, 0x7e, 0xfe, 0xfd, 0xfb, 0xf7, 0xe7, 0xdb, 0xbd, 0x7e,
  0xfe, 0xfd, 0xfb, 0xf7, 0xe7, 0xdb, 0xbd, 0x7e, 0xfe, 0xfd, 0xfb, 0xf7, 0xe7, 0xdb, 0xbd, 0x7e,
  // TILE 09
  0x00, 0xff, 0xff, 0x00, 0x66, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0x66, 0x00, 0xff, 0xff, 0x00,
  0x00, 0xff, 0xff, 0x00, 0x66, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0x66, 0x00, 0xff, 0xff, 0x00,
  // TILE 10
  0xff, 0xff, 0xdd, 0xdd, 0x77, 0x77, 0xff, 0xff, 0xff, 0xff, 0xdd, 0xdd, 0x77, 0x77, 0xff, 0xff,
  0xff, 0xff, 0xdd, 0xdd, 0x77, 0x77, 0xff, 0xff, 0xff, 0xff, 0xdd, 0xdd, 0x77, 0x77, 0xff, 0xff,
  // TILE 11
  0xff, 0xdd, 0xdd, 0xff, 0xff, 0x77, 0x77, 0xff, 0xff, 0xdd, 0xdd, 0xff, 0xff, 0x77, 0x77, 0xff,
  0xff, 0xdd, 0xdd, 0xff, 0xff, 0x77, 0x77, 0xff, 0xff, 0xdd, 0xdd, 0xff, 0xff, 0x77, 0x77, 0xff,
  // TILE 12
  0xcf, 0x87, 0x39, 0x7d, 0x7d, 0xfe, 0xfe, 0xfe, 0xee, 0x66, 0x55, 0x11, 0x33, 0x77, 0xff, 0xff,
  0xff, 0xff, 0xdd, 0xdd, 0x76, 0x76, 0xfe, 0xfe, 0xd6, 0x8a, 0xa9, 0xb9, 0x1b, 0x47, 0xff, 0xff,
  // TILE 13
  0xcf, 0x85, 0x39, 0x7d, 0x7d, 0xfe, 0xfe, 0xfe, 0xee, 0x66, 0x55, 0x31, 0xbb, 0x77, 0x77, 0xff,
  0xff, 0xdd, 0xdd, 0xff, 0xfe, 0x76, 0x76, 0xfe, 0xd6, 0x88, 0xa9, 0xbb, 0x9b, 0x47, 0x77, 0xff,
  // TILE 14
  0xae, 0x57, 0xae, 0x5d, 0xae, 0x5d, 0xae, 0x57, 0xae, 0x57, 0xab, 0x57, 0xab, 0x57, 0xab, 0x57,
  0xab, 0x57, 0xab, 0x57, 0xae, 0x57, 0xae, 0x5d, 0xae, 0x5d, 0xae, 0x57, 0xae, 0x57, 0xab, 0x57,
  // TILE 15
  0xae, 0x57, 0xab, 0x57, 0xab, 0x57, 0xab, 0x57, 0xae, 0x57, 0xae, 0x5d, 0xae, 0x5d, 0xae, 0x57,
  0xae, 0x5d, 0xae, 0x57, 0xae, 0x57, 0xab, 0x57, 0xab, 0x57, 0xab, 0x57, 0xae, 0x57, 0xae, 0x5d,
  // TILE 16
  0x3f, 0xcf, 0xf7, 0xfb, 0xfd, 0xfd, 0xfe, 0xfe, 0x7e, 0xbe, 0x5e, 0x3e, 0x5e, 0x3e, 0x5e, 0x3e,
  0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x02, 0x01, 0x40, 0x90, 0x28, 0x10, 0x20, 0x54, 0x02,
  // TILE 17
  0x5e, 0x3e, 0x5e, 0x3e, 0x5e, 0xbe, 0x5e, 0xbe, 0x7e, 0xfe, 0xfd, 0xfd, 0xfb, 0xf7, 0xcf, 0x3f,
  0x04, 0x22, 0x50, 0xaa, 0x14, 0xa0, 0x40, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00,
  // TILE 18
  0x20, 0x54, 0x2e, 0x17, 0x28, 0x94, 0x82, 0xc0, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0x00,
  0x3f, 0x5f, 0x3f, 0x5f, 0x3f, 0x5f, 0x3f, 0x5f, 0x3f, 0x5f, 0xaf, 0x97, 0xcb, 0xe5, 0xf2, 0xfc,
  // TILE 19
  0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xc0, 0x82, 0x95, 0x28, 0x17, 0x2e, 0x54, 0x20,
  0xfc, 0xf1, 0xeb, 0xd7, 0xaf, 0x9f, 0x3f, 0x5f, 0x3f, 0x5f, 0x3f, 0x5f, 0x3f, 0x5f, 0x3f, 0x5f,
  // TILE 20
  0xff, 0x3f, 0x87, 0xdb, 0xcd, 0xdd, 0x2d, 0x85, 0xc9, 0x56, 0xce, 0x16, 0x2a, 0x56, 0x35, 0x53,
  0x00, 0xa5, 0x52, 0x39, 0x1a, 0xa0, 0x4b, 0x05, 0x02, 0xf1, 0xfc, 0xfe, 0xfe, 0xff, 0xff, 0x7f,
  // TILE 21
  0x33, 0x55, 0x36, 0x6a, 0x16, 0xce, 0x56, 0xc9, 0x85, 0x2d, 0xdd, 0xcd, 0xdb, 0x87, 0x3f, 0xff,
  0x7f, 0xff, 0xff, 0xfe, 0xfe, 0xfc, 0xf1, 0x02, 0x05, 0x4b, 0xa0, 0x1a, 0x39, 0x52, 0xa5, 0x00,
  // TILE 22
  0x2f, 0x5f, 0x2f, 0x17, 0x0b, 0x05, 0x82, 0x40, 0xa0, 0x55, 0x02, 0xd4, 0xcf, 0x95, 0x2a, 0x00,
  0xd6, 0xcc, 0x96, 0x0c, 0x50, 0x39, 0x5a, 0xa9, 0x94, 0x08, 0xe1, 0xf3, 0xe5, 0xaa, 0x45, 0x00,
  // TILE 23
  0x00, 0x2a, 0x95, 0xcf, 0xd4, 0x02, 0x55, 0xa0, 0x40, 0x82, 0x05, 0x0b, 0x17, 0x2f, 0x5f, 0x2f,
  0x00, 0x45, 0xaa, 0xe5, 0xf3, 0xe1, 0x08, 0x94, 0xa9, 0x5a, 0x39, 0x50, 0x84, 0x4e, 0xd4, 0xce,
  // TILE 24
  0x5e, 0x3e, 0x5e, 0x3e, 0x5e, 0x3e, 0x5e, 0x3e, 0x5e, 0x3e, 0x5e, 0x3e, 0x5e, 0x3e, 0x5e, 0x3e,
  0xe4, 0xea, 0xe4, 0x40, 0x10, 0x28, 0x1c, 0x2a, 0x5c, 0x3a, 0x54, 0x28, 0x80, 0x48, 0xd6, 0xcc,
  // TILE 25
  0x00, 0x94, 0x6a, 0xe7, 0x0c, 0x52, 0xa5, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00,
  0x00, 0x52, 0x29, 0x5c, 0x18, 0xa5, 0x52, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00,
  // TILE 26
  0x35, 0x76, 0x2a, 0x06, 0x2a, 0x76, 0x36, 0x71, 0x35, 0x66, 0x2a, 0x16, 0x2a, 0x76, 0x36, 0x51,
  0x3f, 0x5f, 0x3f, 0x5f, 0x3f, 0x5f, 0x3f, 0x5f, 0x3f, 0x5f, 0x3f, 0x5f, 0x3f, 0x5f, 0x3f, 0x5f,
  // TILE 27
  0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0xa5, 0x52, 0x0c, 0xe7, 0x6a, 0x94, 0x00,
  0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x52, 0x25, 0x18, 0x5c, 0x29, 0x52, 0x00,
  // TILE 28
  0x00, 0x51, 0xa2, 0x75, 0xe2, 0x44, 0x0b, 0x17, 0xaf, 0x97, 0xaf, 0x06, 0xa0, 0x59, 0xba, 0x79,
  0xff, 0xfe, 0xfc, 0xfd, 0xfc, 0xf0, 0xea, 0xd5, 0xcf, 0xd7, 0xcb, 0xc3, 0xac, 0x5e, 0x3c, 0x5d,
  // TILE 29
  0xf2, 0x75, 0xb2, 0x61, 0x08, 0x96, 0xaf, 0x9f, 0x2f, 0x5f, 0x2f, 0x16, 0x88, 0x71, 0xfa, 0x79,
  0x2c, 0x59, 0x80, 0x94, 0xab, 0x9f, 0x2f, 0x5f, 0x2f, 0x5f, 0xae, 0x84, 0xa0, 0x59, 0x2a, 0x59,
  // TILE 30
  0xba, 0x79, 0xba, 0x51, 0x06, 0xaf, 0x97, 0xaf, 0x97, 0x0b, 0x44, 0xe2, 0x75, 0xa2, 0x51, 0x00,
  0x3c, 0x5c, 0x2e, 0x9c, 0xc3, 0xcb, 0xd7, 0xcf, 0xd5, 0xea, 0xf0, 0xfc, 0xfd, 0xfc, 0xfe, 0xff,
  // TILE 31
  0xff, 0xff, 0x3f, 0x8f, 0x77, 0xfb, 0xfb, 0xfd, 0xfd, 0xad, 0x53, 0xab, 0xd7, 0x8f, 0x3f, 0xff,
  0xe1, 0xca, 0x95, 0x2a, 0x5d, 0x2e, 0x57, 0x2b, 0x55, 0x2b, 0x55, 0x2b, 0x95, 0xaa, 0x95, 0xc0,
  // TILE 32
  0xff, 0xce, 0x18, 0x21, 0xff, 0x21, 0x18, 0xce, 0xff, 0x3f, 0x7f, 0xd5, 0xab, 0xd5, 0x7f, 0x3f,
  0xff, 0x7f, 0xff, 0xaa, 0x57, 0xaa, 0xff, 0x7f, 0xff, 0xe7, 0x8c, 0x10, 0xff, 0x10, 0x8c, 0xe7,
  // TILE 33
  0xff, 0xff, 0x7f, 0x3f, 0x8f, 0x57, 0x27, 0x8b, 0xd9, 0xfd, 0xfd, 0xfe, 0xfe, 0xfe, 0xfe, 0xfd,
  0x77, 0x08, 0x9d, 0x0f, 0xfe, 0x3d, 0xfa, 0xf4, 0xe1, 0xd7, 0xeb, 0xd1, 0xa7, 0xdf, 0x8f, 0xc7,
  // TILE 34
  0xfd, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfd, 0xfd, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfd,
  0xaf, 0x1f, 0xbf, 0x4f, 0xa7, 0xc7, 0x9f, 0x3f, 0x9f, 0xcf, 0x9f, 0x4f, 0xa7, 0x5f, 0x9f, 0x1f,
  // TILE 35
  0xfd, 0xfe, 0xfe, 0xfe, 0xfe, 0xfd, 0xfd, 0xd9, 0xab, 0x57, 0x87, 0x4f, 0xbf, 0x7f, 0xff, 0xff,
  0xa7, 0x4f, 0x9f, 0xcf, 0xa1, 0xd3, 0xe7, 0xd1, 0xea, 0xfc, 0x3a, 0xfd, 0x0f, 0x5d, 0x88, 0x77,
  // TILE 36
  0xa7, 0xcf, 0x67, 0xd1, 0xeb, 0x77, 0x69, 0xf5, 0x1b, 0xb0, 0x7a, 0x9c, 0xe6, 0xdd, 0xe2, 0xfc,
  0x29, 0x50, 0x28, 0x84, 0xc9, 0xd4, 0xca, 0xe4, 0xe9, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  // TILE 37
  0xfc, 0xe3, 0xde, 0xe5, 0x9e, 0x7d, 0xb8, 0x13, 0xe9, 0x71, 0x67, 0xd3, 0xe9, 0x47, 0xef, 0xd7,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf3, 0xe5, 0xe8, 0xd4, 0xca, 0xd5, 0x88, 0x50, 0x28, 0x51,
  // TILE 38
  0xa7, 0xcf, 0x67, 0x11, 0x8b, 0x57, 0x21, 0x89, 0xd9, 0xfc, 0xfc, 0xfe, 0xfe, 0xfe, 0xfe, 0xfc,
  0x21, 0x08, 0x9d, 0x0f, 0xfe, 0x3d, 0xfa, 0xf4, 0xe1, 0xd7, 0xeb, 0xd1, 0xa7, 0xdf, 0xaf, 0xd7,
  // TILE 39
  0xfc, 0xfe, 0xfe, 0xfe, 0xfe, 0xfd, 0xfc, 0xd9, 0xa9, 0x51, 0x87, 0x43, 0xa9, 0x47, 0xef, 0xd7,
  0xa7, 0x4f, 0x9f, 0xcf, 0xa1, 0xd3, 0xe7, 0xd1, 0xea, 0xfc, 0x3a, 0xfd, 0x0f, 0x5d, 0x88, 0x51,
  // TILE 40
  0x00, 0xfd, 0xfd, 0xfd, 0xfd, 0x05, 0x15, 0x15, 0x15, 0x15, 0x05, 0xfd, 0xfd, 0xfd, 0xfd, 0x00,
  0x00, 0x6f, 0x6f, 0x6f, 0x6c, 0x1a, 0x6a, 0x6a, 0x6a, 0x6a, 0x1a, 0x6c, 0x6f, 0x6f, 0x6f, 0x00,
  // TILE 41
  0xfd, 0xfd, 0x01, 0xf9, 0x79, 0x01, 0xf9, 0xf9, 0xf9, 0xf9, 0x01, 0xf9, 0xf9, 0x01, 0xfd, 0xfd,
  0x7f, 0x7f, 0x80, 0xbc, 0xb9, 0x81, 0xb8, 0xbf, 0xbf, 0xbf, 0x80, 0xbf, 0xbf, 0x80, 0x7f, 0x7f,
  // TILE 42
  0x0f, 0xf7, 0x0b, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x0b, 0xf7, 0x0f,
  0x00, 0x7f, 0x80, 0xc0, 0xc0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xc0, 0xc0, 0x80, 0x7f, 0x00,
  // TILE 43
  0x02, 0xf2, 0xa2, 0x52, 0xa2, 0x52, 0xf2, 0x02, 0x02, 0xf2, 0xa2, 0x52, 0xa2, 0x52, 0xf2, 0x02,
  0x00, 0x3f, 0x6a, 0x55, 0x6a, 0x55, 0x3f, 0x00, 0x00, 0x3f, 0x6a, 0x55, 0x6a, 0x55, 0x3f, 0x00,
  // TILE 44
  0x02, 0x72, 0x22, 0x52, 0x22, 0x52, 0x72, 0x02, 0x02, 0x72, 0x22, 0x52, 0x22, 0x52, 0x72, 0x02,
  0x7f, 0x53, 0x55, 0x65, 0x7f, 0x41, 0x77, 0x41, 0x7f, 0x63, 0x5d, 0x63, 0x7f, 0x41, 0x75, 0x7b,
  // TILE 45
  0x02, 0x72, 0x22, 0x52, 0x22, 0x52, 0x72, 0x02, 0x02, 0x72, 0x22, 0x52, 0x22, 0x52, 0x72, 0x02,
  0x7f, 0x41, 0x7f, 0x41, 0x7b, 0x77, 0x6f, 0x41, 0x7f, 0x41, 0x7b, 0x77, 0x6f, 0x41, 0x7f, 0x7f,
  // TILE 46
  0x5e, 0x3e, 0x5e, 0x3e, 0x5e, 0x3e, 0x5e, 0x3e, 0x5e, 0x3e, 0x5e, 0x3e, 0x5e, 0x3e, 0x5e, 0x3e,
  0x00, 0x7f, 0x7f, 0x73, 0x0d, 0x72, 0x33, 0x6f, 0x33, 0x73, 0x1f, 0x6e, 0x71, 0x7f, 0x7f, 0x00,
  // TILE 47
  0x7a, 0xfa, 0x7a, 0xba, 0x7a, 0xfa, 0x7a, 0xfa, 0x7a, 0xfa, 0x7a, 0xba, 0x7a, 0xfa, 0x7a, 0xfa,
  0x6f, 0x6f, 0x6f, 0x6e, 0x6f, 0x6f, 0x6f, 0x6f, 0x6f, 0x6f, 0x6f, 0x6e, 0x6f, 0x6f, 0x6f, 0x6f,
  // TILE 48
  0x00, 0xbd, 0xbf, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0xbf, 0xbd, 0x00,
  0x80, 0x7e, 0x7e, 0x81, 0x9a, 0x9a, 0x9a, 0x1a, 0x9a, 0x9a, 0x9a, 0x9a, 0x81, 0x7e, 0x7e, 0x80,
  // TILE 49
  0x01, 0xda, 0xda, 0xc1, 0x15, 0xe5, 0xe5, 0xe4, 0xe4, 0xe5, 0xe5, 0x15, 0xc1, 0xda, 0xda, 0x01,
  0x00, 0xdd, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xdd, 0x00,
  // TILE 50
  0x00, 0xff, 0x20, 0x36, 0x36, 0x36, 0x32, 0x34, 0x32, 0x30, 0x36, 0x30, 0x36, 0x20, 0xff, 0x00,
  0x80, 0x5f, 0x50, 0x9b, 0x98, 0x9b, 0x9b, 0x18, 0x9b, 0x98, 0x9b, 0x98, 0x9b, 0x50, 0x5f, 0x00,
  // TILE 51
  0x01, 0xbe, 0xbe, 0xbe, 0xbe, 0xbe, 0xbe, 0xbe, 0xbe, 0xbe, 0xbe, 0xbe, 0xbe, 0xbe, 0xbe, 0x01,
  0x00, 0xff, 0x40, 0x6c, 0x60, 0x6c, 0x6c, 0x60, 0x6c, 0x60, 0x6c, 0x60, 0x6c, 0x40, 0xff, 0x00,
  // TILE 52
  0x01, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0x01,
  0xf0, 0x8b, 0x6b, 0x6b, 0x8b, 0xcb, 0x8b, 0x4b, 0xcb, 0xcb, 0xcb, 0x8b, 0x6b, 0x6b, 0x8b, 0x70,
  // TILE 53
  0xfe, 0xfd, 0xfb, 0x37, 0xc7, 0xeb, 0xed, 0xee, 0xee, 0xed, 0xeb, 0xd7, 0x27, 0xdb, 0xbd, 0x7e,
  0xfe, 0xfd, 0xfb, 0xf4, 0xc2, 0xd5, 0xa5, 0x65, 0xe5, 0xe5, 0xd5, 0xc2, 0xe4, 0xdb, 0xbd, 0x7e,
  // TILE 54
  0xfe, 0x0d, 0xa3, 0x41, 0x59, 0xbc, 0xbc, 0xa4, 0xa4, 0xb4, 0xbc, 0x59, 0x41, 0xa3, 0x0d, 0x7e,
  0xfe, 0xf0, 0xc7, 0x90, 0xaf, 0x5e, 0x40, 0x5e, 0x5e, 0x40, 0x5e, 0xaf, 0x90, 0xc7, 0xb0, 0x7e,
  // TILE 55
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  // TILE 56
  0xff, 0x03, 0xfb, 0xfb, 0x5b, 0x5b, 0xd9, 0x7a, 0x5a, 0x59, 0xdb, 0x5b, 0xfb, 0xfb, 0x03, 0xff,
  0xff, 0xfc, 0xfb, 0xfb, 0xfb, 0xfb, 0x83, 0x73, 0x73, 0x83, 0xfb, 0xfb, 0xfb, 0xfb, 0xfc, 0xff,
  // TILE 57
  0x00, 0x7e, 0x7e, 0x00, 0x6a, 0x6a, 0x6a, 0x6a, 0x6a, 0x6a, 0x6a, 0x6a, 0x00, 0x7e, 0x7e, 0x00,
  0x00, 0x7d, 0x01, 0x79, 0x79, 0x71, 0x6d, 0x51, 0x51, 0x6d, 0x71, 0x79, 0x79, 0x01, 0x7d, 0x00,
  // TILE 58
  0x00, 0xfe, 0x02, 0x16, 0x0a, 0x16, 0x0a, 0x16, 0x0a, 0x16, 0x0a, 0x16, 0x0a, 0x02, 0xfe, 0x00,
  0x00, 0x7d, 0x01, 0x79, 0x79, 0x71, 0x6d, 0x51, 0x51, 0x6d, 0x71, 0x79, 0x79, 0x01, 0x7d, 0x00,
};

////////// worldmap chunks ////////////////
///////////////////////////////////////////
const unsigned char PROGMEM chunks[] =
{
   // chunk: 0
   // chunk name: CA0000
  0x18, 0x16, 0x05, 0x00, 0x17, 0x18, 
  0x1D, 0x1E, 0x00, 0x05, 0x1C, 0x1D, 
  0x05, 0x06, 0x05, 0x05, 0x05, 0x00, 
  0x05, 0x05, 0x05, 0x00, 0x05, 0x05, 
  0x15, 0x05, 0x1F, 0x05, 0x06, 0x14, 
  0x13, 0x15, 0x06, 0x05, 0x14, 0x12, 
   // chunk: 1
   // chunk name: CA0001
  0x18, 0x16, 0x05, 0x00, 0x17, 0x11, 
  0x1D, 0x1E, 0x00, 0x05, 0x1C, 0x19, 
  0x05, 0x06, 0x05, 0x00, 0x1F, 0x19, 
  0x05, 0x05, 0x05, 0x00, 0x05, 0x19, 
  0x15, 0x05, 0x05, 0x05, 0x06, 0x19, 
  0x13, 0x15, 0x06, 0x05, 0x14, 0x12, 
   // chunk: 2
   // chunk name: CA0010
  0x18, 0x18, 0x11, 0x10, 0x18, 0x18, 
  0x1D, 0x1D, 0x17, 0x16, 0x1D, 0x1D, 
  0x05, 0x06, 0x1C, 0x1E, 0x05, 0x00, 
  0x05, 0x05, 0x05, 0x00, 0x05, 0x05, 
  0x15, 0x05, 0x05, 0x05, 0x06, 0x14, 
  0x13, 0x15, 0x06, 0x05, 0x14, 0x12, 
   // chunk: 3
   // chunk name: CA0011
  0x18, 0x18, 0x18, 0x18, 0x11, 0x1F, 
  0x1D, 0x1D, 0x1D, 0x1D, 0x17, 0x11, 
  0x05, 0x06, 0x00, 0x05, 0x1C, 0x19, 
  0x05, 0x05, 0x05, 0x00, 0x05, 0x19, 
  0x15, 0x05, 0x05, 0x05, 0x06, 0x19, 
  0x13, 0x15, 0x06, 0x05, 0x14, 0x12, 
   // chunk: 4
   // chunk name: CA0100
  0x05, 0x1B, 0x05, 0x00, 0x17, 0x18, 
  0x10, 0x16, 0x00, 0x05, 0x1C, 0x1D, 
  0x1B, 0x1E, 0x05, 0x05, 0x05, 0x00, 
  0x1B, 0x1F, 0x00, 0x00, 0x05, 0x05, 
  0x1B, 0x05, 0x05, 0x05, 0x06, 0x14, 
  0x13, 0x15, 0x06, 0x05, 0x14, 0x12, 
   // chunk: 5
   // chunk name: CA0101
  0x10, 0x16, 0x05, 0x00, 0x17, 0x11, 
  0x1B, 0x1E, 0x00, 0x05, 0x1C, 0x19, 
  0x1B, 0x06, 0x05, 0x05, 0x00, 0x19, 
  0x1B, 0x05, 0x05, 0x00, 0x05, 0x19, 
  0x1B, 0x00, 0x05, 0x05, 0x06, 0x19, 
  0x13, 0x15, 0x06, 0x05, 0x14, 0x12, 
   // chunk: 6
   // chunk name: CA0110
  0x1F, 0x1F, 0x05, 0x06, 0x10, 0x18, 
  0x1F, 0x06, 0x10, 0x18, 0x16, 0x1D, 
  0x10, 0x18, 0x16, 0x1D, 0x1E, 0x00, 
  0x1B, 0x1D, 0x1E, 0x00, 0x05, 0x05, 
  0x1B, 0x05, 0x05, 0x05, 0x06, 0x14, 
  0x13, 0x15, 0x06, 0x05, 0x14, 0x12, 
   // chunk: 7
   // chunk name: CA0111
  0x05, 0x10, 0x18, 0x18, 0x18, 0x11, 
  0x10, 0x16, 0x1D, 0x1D, 0x1D, 0x19, 
  0x1B, 0x1E, 0x1F, 0x1F, 0x06, 0x19, 
  0x1B, 0x05, 0x05, 0x1F, 0x1F, 0x19, 
  0x1B, 0x05, 0x05, 0x05, 0x14, 0x12, 
  0x13, 0x15, 0x06, 0x05, 0x19, 0x06, 
   // chunk: 8
   // chunk name: CA1000
  0x18, 0x16, 0x05, 0x00, 0x17, 0x18, 
  0x1D, 0x1E, 0x00, 0x05, 0x1C, 0x1D, 
  0x05, 0x06, 0x00, 0x05, 0x05, 0x00, 
  0x00, 0x05, 0x05, 0x00, 0x05, 0x05, 
  0x1A, 0x15, 0x00, 0x05, 0x06, 0x14, 
  0x05, 0x13, 0x1A, 0x1A, 0x1A, 0x12, 
   // chunk: 9
   // chunk name: CA1001
  0x18, 0x16, 0x05, 0x00, 0x17, 0x11, 
  0x1D, 0x1E, 0x00, 0x05, 0x1C, 0x19, 
  0x05, 0x06, 0x05, 0x05, 0x1F, 0x19, 
  0x05, 0x05, 0x14, 0x1A, 0x15, 0x19, 
  0x1A, 0x1A, 0x12, 0x05, 0x1B, 0x19, 
  0x05, 0x00, 0x05, 0x06, 0x13, 0x12, 
   // chunk: 10
   // chunk name: CA1010
  0x18, 0x11, 0x00, 0x05, 0x10, 0x18, 
  0x1D, 0x17, 0x18, 0x18, 0x16, 0x1D, 
  0x05, 0x1C, 0x1D, 0x1D, 0x1E, 0x05, 
  0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
  0x15, 0x05, 0x05, 0x05, 0x06, 0x14, 
  0x13, 0x1A, 0x1A, 0x1A, 0x1A, 0x12, 
   // chunk: 11
   // chunk name: CA1011
  0x18, 0x18, 0x18, 0x09, 0x11, 0x05, 
  0x1D, 0x1D, 0x1D, 0x09, 0x17, 0x11, 
  0x05, 0x06, 0x05, 0x05, 0x1C, 0x19, 
  0x05, 0x05, 0x05, 0x00, 0x05, 0x19, 
  0x15, 0x05, 0x1F, 0x05, 0x06, 0x19, 
  0x13, 0x1A, 0x1A, 0x1A, 0x1A, 0x12, 
   // chunk: 12
   // chunk name: CA1100
  0x10, 0x16, 0x05, 0x00, 0x17, 0x18, 
  0x1B, 0x1E, 0x00, 0x05, 0x1C, 0x1D, 
  0x1B, 0x06, 0x05, 0x05, 0x05, 0x00, 
  0x13, 0x15, 0x05, 0x00, 0x05, 0x05, 
  0x05, 0x13, 0x15, 0x05, 0x06, 0x14, 
  0x05, 0x06, 0x13, 0x1A, 0x1A, 0x12, 
   // chunk: 13
   // chunk name: CA1101
  0x10, 0x16, 0x05, 0x00, 0x17, 0x11, 
  0x1B, 0x1E, 0x00, 0x05, 0x1C, 0x19, 
  0x1B, 0x06, 0x05, 0x05, 0x05, 0x19, 
  0x1B, 0x00, 0x05, 0x00, 0x05, 0x19, 
  0x1B, 0x05, 0x05, 0x05, 0x14, 0x12, 
  0x13, 0x1A, 0x1A, 0x1A, 0x12, 0x1F, 
   // chunk: 14
   // chunk name: CA1110
  0x10, 0x18, 0x18, 0x09, 0x18, 0x18, 
  0x1B, 0x1D, 0x1D, 0x09, 0x1D, 0x1D, 
  0x1B, 0x06, 0x00, 0x06, 0x05, 0x00, 
  0x1B, 0x05, 0x05, 0x00, 0x05, 0x05, 
  0x13, 0x15, 0x05, 0x05, 0x06, 0x14, 
  0x1F, 0x13, 0x1A, 0x1A, 0x1A, 0x12, 
   // chunk: 15
   // chunk name: CA1111
  0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
  0x05, 0x05, 0x05, 0x05, 0x06, 0x05, 
  0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
  0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
  0x05, 0x06, 0x05, 0x05, 0x05, 0x05, 
  0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 


// chunk: 16
  // chunk name: FT0000 + FT1000
    0x09, 0x7B, 0x00, 0x43, 0x00, 0x00,
    0X0D, 0x0C, 0x27, 0x34, 0x71, 0x00,
    0x33, 0x34, 0x43, 0x33, 0x43, 0x33,
    0x01, 0x97, 0xB4, 0x93, 0xB4, 0x00,
    0x90, 0xF9, 0xEB, 0xF3, 0xE0, 0xB7,
    0xD0, 0XCD, 0xDC, 0xC4, 0xD0, 0xC0,
  // chunk: 17
  // chunk name: FT0001 + FT1001
  0x70, 0x00, 0x40, 0x33, 0x00, 0x78,
  0x00, 0x41, 0x34, 0x33, 0x99, 0xBB,
  0x33, 0x33, 0x43, 0x19, 0xDF, 0xCC,
  0x90, 0xB0, 0x71, 0X9D, 0xBE, 0x7B,
  0xD0, 0xE7, 0xB0, 0xD3, 0XED, 0xBC,
  0x00, 0xD0, 0xC0, 0x73, 0xD0, 0xC8,
  // chunk: 18
  // chunk name: FT0010 + FT1010
  0x09, 0x1B, 0x09, 0x1B, 0x99, 0xBB,
  0X2D, 0x0E, 0x1F, 0x7E, 0xDF, 0xCC,
  0x34, 0X3D, 0x3C, 0X3D, 0x3C, 0x34,
  0x11, 0x73, 0x94, 0xB3, 0x04, 0x13,
  0x00, 0x11, 0xD0, 0xC3, 0x29, 0x0B,
  0x01, 0x00, 0x10, 0x03, 0X1D, 0x7C,
  // chunk: 19
  // chunk name: FT0011 + FT1011
  0x00, 0x99, 0xBB, 0x91, 0xB9, 0x0B,
  0x77, 0XDD, 0xCC, 0xD9, 0xEF, 0xBC,
  0x33, 0x33, 0x03, 0X3D, 0xDC, 0xC1,
  0x00, 0x04, 0x73, 0x42, 0x99, 0xBB,
  0x19, 0x9B, 0xB3, 0x94, 0XFD, 0xCC,
  0X0D, 0xDC, 0xC0, 0xD3, 0xC0, 0x70,
  // chunk: 20
  // chunk name: FT0100 + FT1100
  0x98, 0xB0, 0x07, 0x33, 0x00, 0x70,
  0xD9, 0xEB, 0xB0, 0x33, 0x40, 0x07,
  0X9D, 0xFE, 0xEB, 0xB4, 0x33, 0x33,
  0xD9, 0xEF, 0xFC, 0xC3, 0x04, 0x70,
  0X9D, 0xFC, 0xC7, 0x93, 0xB0, 0x10,
  0xD8, 0xC0, 0x20, 0xD3, 0xC0, 0x00,
  // chunk: 21
  // chunk name: FT0101 + FT1101
  0x09, 0x2B, 0x07, 0x33, 0x79, 0x0B,
  0X9D, 0xBE, 0x7B, 0x33, 0X9D, 0xBC,
  0xD9, 0xCF, 0x1C, 0x34, 0xD9, 0xCB,
  0X7D, 0x9C, 0xB1, 0x43, 0X9D, 0xBC,
  0x99, 0xFB, 0xE0, 0xB4, 0xD9, 0xCB,
  0XDD, 0xCC, 0xD0, 0xC3, 0X7D, 0x1C,
  // chunk: 22
  // chunk name: FT0110 + FT1110
  0x09, 0x9B, 0xB2, 0x99, 0xBB, 0x00,
  0X1D, 0xDE, 0xEB, 0XFD, 0xCC, 0x11,
  0x97, 0XBD, 0xDC, 0xC7, 0x33, 0x33,
  0xD9, 0xCB, 0x42, 0x33, 0x34, 0x20,
  0X2D, 0x9E, 0xBB, 0x93, 0xB0, 0x77,
  0x77, 0XDD, 0xCC, 0xD3, 0xC1, 0x00,
  // chunk: 23
  // chunk name: FT0111 + FT1111
  0x90, 0xB9, 0x9B, 0xB9, 0x9B, 0xB7,
  0xD9, 0xEF, 0xFC, 0XED, 0xFE, 0xCB,
  0X9D, 0xFC, 0xE4, 0xF3, 0XED, 0xBC,
  0xD1, 0xE9, 0xFB, 0xE4, 0xF9, 0xCB,
  0x99, 0xFF, 0x9C, 0xB3, 0XED, 0xBC,
  0XDD, 0xCC, 0xD7, 0xC3, 0xD2, 0xC0,



  // chunk: 32
  // chunk name: CAFS1010
  0x11, 0x14, 0x15, 0x07, 0x21, 0x23,
  0x17, 0x18, 0x16, 0x21, 0x27, 0x24,
  0x1C, 0x1D, 0x1E, 0x25, 0x24, 0x03,
  0x06, 0x00, 0x06, 0x07, 0x03, 0x03,
  0x1A, 0x15, 0x21, 0x23, 0x21, 0x23,
  0x17, 0x16, 0x25, 0x24, 0x25, 0x24,
  // chunk: 33
  // chunk name: BK0000
  0x37, 0x37, 0x37, 0x37, 0x37, 0x37,
  0x37, 0x37, 0x37, 0x37, 0x37, 0x37,
  0x37, 0x37, 0x37, 0x37, 0x37, 0x37,
  0x37, 0x37, 0x37, 0x37, 0x37, 0x37,
  0x37, 0x37, 0x37, 0x37, 0x37, 0x37,
  0x37, 0x37, 0x37, 0x37, 0x37, 0x37,
  // chunk: 34
  // chunk name: House
  0x05, 0x05, 0x05, 0x05, 0x05, 0x01,
  0x01, 0x05, 0x2B, 0x2B, 0x2B, 0x05,
  0x05, 0x06, 0x2B, 0x2B, 0x2B, 0x05,
  0x05, 0x03, 0x28, 0x29, 0x28, 0x04,
  0x02, 0x03, 0x03, 0x03, 0x03, 0x03,
  0x02, 0x02, 0x01, 0x04, 0x34, 0x05,
  // chunk: 35
  // chunk name: apple tree
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
  0x00, 0x00, 0x21, 0x23, 0x00, 0x00,
  0x00, 0x00, 0x25, 0x24, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
  0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  // chunk: 36
  // chunk name: interior left
  0x35, 0x34, 0x35, 0x08, 0x08, 0x08,
  0x33, 0x2F, 0x2F, 0x2F, 0x2F, 0x09,
  0x32, 0x08, 0x08, 0x08, 0x08, 0x08,
  0x08, 0x08, 0x08, 0x08, 0x08, 0x35,
  0x36, 0x36, 0x08, 0x08, 0x35, 0x34,
  0x37, 0x37, 0x37, 0x00, 0x37, 0x37,
  // chunk: 37
  // chunk name: interior Inn
  0x2F, 0x2F, 0x2F, 0x33, 0x09, 0x33,
  0x34, 0x34, 0x34, 0x32, 0x08, 0x32,
  0x08, 0x08, 0x08, 0x08, 0x08, 0x08,
  0x35, 0x34, 0x35, 0x35, 0x34, 0x35,
  0x35, 0x34, 0x35, 0x35, 0x34, 0x35,
  0x37, 0x37, 0x37, 0x37, 0x37, 0x37,
  // chunk: 38
  // chunk name: your interior f
  0x08, 0x08, 0x08, 0x35, 0x34, 0x35,
  0x2F, 0x09, 0x2F, 0x33, 0x2F, 0x33,
  0x08, 0x08, 0x08, 0x32, 0x34, 0x32,
  0x36, 0x08, 0x08, 0x08, 0x08, 0x08,
  0x36, 0x08, 0x08, 0x08, 0x08, 0x08,
  0x37, 0x37, 0x37, 0x00, 0x37, 0x37,
  // chunk: 39
  // chunk name: interior Inn 2
  0x2F, 0x2F, 0x2F, 0x2F, 0x2F, 0x2F,
  0x08, 0x08, 0x08, 0x08, 0x08, 0x35,
  0x08, 0x08, 0x08, 0x34, 0x34, 0x34,
  0x08, 0x08, 0x08, 0x08, 0x08, 0x08,
  0x08, 0x08, 0x08, 0x08, 0x08, 0x08,
  0x37, 0x37, 0x37, 0x00, 0x37, 0x37,
  // chunk: 40
  // chunk name: interior  Tree
  0x37, 0x37, 0x37, 0x37, 0x37, 0x37,
  0x37, 0x37, 0x37, 0x37, 0x37, 0x37,
  0x37, 0x37, 0x05, 0x06, 0x05, 0x37,
  0x37, 0x37, 0x05, 0x05, 0x05, 0x37,
  0x37, 0x37, 0x05, 0x05, 0x06, 0x37,
  0x37, 0x37, 0x37, 0x07, 0x37, 0x37,
  // chunk: 41
  // chunk name: interior Cave
  0x10, 0x18, 0x18, 0x18, 0x18, 0x11, 
  0x1B, 0x1D, 0x1D, 0x1D, 0x1D, 0x19, 
  0x1B, 0x05, 0x39, 0x38, 0x05, 0x19, 
  0x1B, 0x05, 0x03, 0x03, 0x05, 0x19, 
  0x1B, 0x05, 0x05, 0x05, 0x05, 0x19, 
  0x13, 0x1A, 0x15, 0x00, 0x14, 0x12, 
  // chunk: 42
  // chunk name: Big Tree
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x05, 0x00, 0x07, 0x00, 0x01,
  0x00, 0x00, 0x21, 0x22, 0x23, 0x00,
  0x07, 0x00, 0x25, 0x2A, 0x24, 0x00,
  0x00, 0x00, 0x06, 0x00, 0x07, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  // chunk: 43
  // chunk name: Shop
  0x05, 0x05, 0x05, 0x05, 0x05, 0x05,
  0x05, 0x2B, 0x2B, 0x2B, 0x2B, 0x05,
  0x05, 0x2B, 0x2B, 0x2C, 0x2B, 0x05,
  0x05, 0x28, 0x28, 0x29, 0x28, 0x05,
  0x05, 0x03, 0x03, 0x03, 0x03, 0x05,
  0x05, 0x05, 0x06, 0x04, 0x05, 0x05,
  // chunk: 44
  // chunk name: Battle cave
  0x14, 0x1A, 0x1A, 0x1A, 0x1A, 0x15,
  0x19, 0x05, 0x06, 0x05, 0x05, 0x1B,
  0x19, 0x05, 0x05, 0x05, 0x06, 0x1B,
  0x19, 0x10, 0x18, 0x2E, 0x11, 0x1B,
  0x17, 0x16, 0x1D, 0x2A, 0x17, 0x16,
  0x1C, 0x1E, 0x05, 0x06, 0x1C, 0x1E,
  // chunk: 45
  // chunk name: Inn
  0x05, 0x2B, 0x2B, 0x2B, 0x2B, 0x05,
  0x05, 0x2B, 0x2B, 0x2D, 0x2B, 0x05,
  0x02, 0x28, 0x28, 0x28, 0x28, 0x02,
  0x03, 0x28, 0x28, 0x29, 0x28, 0x04,
  0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
  0x34, 0x03, 0x34, 0x03, 0x34, 0x03,
  // chunk: 46
  // chunk name: Your House
  0x06, 0x2B, 0x2B, 0x2B, 0x21, 0x23,
  0x01, 0x2B, 0x2B, 0x2B, 0x2B, 0x24,
  0x03, 0x28, 0x2B, 0x2B, 0x2B, 0x07,
  0x03, 0x02, 0x28, 0x29, 0x28, 0x04,
  0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
  0x34, 0x34, 0x01, 0x03, 0x01, 0x01,
  // chunk: 47
  // chunk name: bedroom
  0x37, 0x2F, 0x2F, 0x2F, 0x2F, 0x37,
  0x37, 0x34, 0x31, 0x31, 0x34, 0x37,
  0x37, 0x08, 0x30, 0x30, 0x08, 0x37,
  0x37, 0x08, 0x08, 0x08, 0x08, 0x37,
  0x2F, 0x2F, 0x2F, 0x2F, 0x09, 0x2F,
  0x08, 0x08, 0x08, 0x08, 0x08, 0x08,
  // chunk: 48
  // chunk name: interior shop
  0x33, 0x33, 0x33, 0x33, 0x33, 0x33,
  0x32, 0x32, 0x32, 0x32, 0x32, 0x32,
  0x08, 0x08, 0x08, 0x08, 0x08, 0x08,
  0x08, 0x08, 0x08, 0x08, 0x08, 0x08,
  0x36, 0x08, 0x36, 0x08, 0x36, 0x08,
  0x37, 0x37, 0x37, 0x37, 0x37, 0x37,
};


////////// worldmap regions ///////////////
///////////////////////////////////////////
const unsigned char PROGMEM regions[] =
{
  // REGION_FIELDS_SWAMP           0
  0x0F, 0x0F, 0x01, 0x0F,
  // REGION_SWAMP_FOREST           1
  0x10, 0x0F, 0x10, 0x01,
  // REGION_FOREST_CANYON          2
  0x0E, 0x00, 0x01, 0x0E,
  // REGION_FIELDS_CANYONS         3
  0x00, 0x0E, 0x0F, 0x01,
  // REGION_SWAMP_ISLAND_ONE       4
  0x12, 0x16, 0x03, 0x02,
  // REGION_SWAMP_ISLAND_TWO       5
  0x18, 0x19, 0x04, 0x02,
  // REGION_LONG_ROAD              6
  0x01, 0x14, 0x0E, 0x01,
  // REGION_APPLE_FARM             7
  0x0C, 0x10, 0x03, 0x04,
  // REGION_YOUR_GARDEN            8
  0x01, 0x19, 0x05, 0x04,

  // REGION_FIELDS                 9
  0x00, 0x0F, 0x0F, 0x0F,
  // REGION_SWAMP                  10
  0x10, 0x10, 0x10, 0x0E,
  // REGION_FOREST                 11
  0x0F, 0x00, 0x11, 0x0F,
  // REGION_CANYONS                12
  0x00, 0x00, 0x0E, 0x0E,
  // REGION_HOUSE_INTERIOR         13
  0x03, 0x1E, 0x01, 0x02,
  // REGION_INN_INTERIOR           14
  0x11, 0x1E, 0x03, 0x02,
  // REGION_YOUR_INTERIOR          15
  0x17, 0x1E, 0x01, 0x02,
  // REGION_SHOP_INTERIOR          16
  0x0A, 0x1F, 0x02, 0x01,
  // REGION_TREE_INTERIOR          17
  0x07, 0x1F, 0x01, 0x01,
  // REGION_CAVE_INTERIOR          18
  0x0F, 0x1F, 0x01, 0x01,
  // REGION_ALL_BLACK              19
  0x00, 0x1E, 0x20, 0x03,
};


////////// worldmap solid map /////////////
///////////////////////////////////////////
const unsigned char PROGMEM solid_map[] =
{
  0xC8, 0xF0, 0xFF, 0xFF, 
  0x3A, 0x0D, 0x03, 0x96, 
  0x69, 0x62, 0xE8, 0xD0, 
  0x63, 0x6C, 0x25, 0x83, 
  0x0C, 0x43, 0xB1, 0x94, 
  0xCC, 0x59, 0xAB, 0xA6, 
  0x63, 0x65, 0x02, 0xA0, 
  0x30, 0xE9, 0x68, 0xB5, 
  0x03, 0xE0, 0x47, 0x83, 
  0x6A, 0x58, 0x10, 0xA8, 
  0x88, 0x49, 0x9B, 0xAD, 
  0xAA, 0x40, 0x42, 0xA4, 
  0x3A, 0x54, 0x5F, 0x85, 
  0x81, 0x49, 0x80, 0xB0, 
  0xFF, 0xFF, 0x37, 0x9E, 
  0xD3, 0xD0, 0xFF, 0xBF, 
  0x49, 0x8A, 0x29, 0xA2, 
  0x11, 0x8A, 0x82, 0x8B, 
  0x7B, 0x89, 0x38, 0x88, 
  0x5B, 0xAA, 0x25, 0xCA, 
  0x01, 0x00, 0x30, 0x92, 
  0x7B, 0xF7, 0xAB, 0xA9, 
  0x51, 0x88, 0x41, 0xA1, 
  0x05, 0x8B, 0x4A, 0x8C, 
  0x4F, 0xA2, 0x92, 0xBB, 
  0x49, 0x8F, 0xAC, 0x86, 
  0x21, 0x92, 0x29, 0xB0, 
  0x49, 0x95, 0x80, 0xA4, 
  0x49, 0x90, 0x4D, 0x8E, 
  0xFF, 0xFF, 0xFF, 0xFF, 
  0x08, 0x00, 0x8E, 0x00, 
  0x00, 0x04, 0x00, 0x00, 
};

////////// worldmap door location /////////
///////////////////////////////////////////
const unsigned char PROGMEM doors[] =
{
  // x,y, tile coÃ¶rdinate for each door

  // exterior doors that lead to interiors
  // =====================================

  // Doors in the FIELDS region: total 8
  33,  93,   // Big Tree        0
  81,  93,   // Big Tree        1
  21,  99,   // Big Tree        2
  75, 135,   // Big Tree        3
  9 , 141,   // Big Tree        4
  51, 147,   // Big Tree        5
  57, 165,   // Big Tree        6
  87, 171,   // Big Tree        7
  // Doors in the SWAMP region: total  5
  111, 105,  // Big Tree        8
  177, 111,  // Big Tree        9
  117, 117,  // Big Tree        10
  141, 117,  // Big Tree        11
  105, 165,  // Big Tree        12
  // Doors in the FOREST region: total 3
  123, 33,   // Big Tree        13
  147, 57,   // Big Tree        14
  99 , 69,   // Big Tree        15
  // Doors in the CANYON region: total 4
  63, 75,    // Big Tree        16
  69, 33,    // Big Tree        17
  9 , 69,    // Big Tree        18
  3 , 39,    // Big Tree        19

  // Doors in the FIELDS region: total 1
  9,  99,    // Inn             20
  // Doors in the SWAMP region: total  1
  123, 141,  // Inn             21
  // Doors in the FOREST region: total 1
  105, 39,   // Inn             22
  // Doors in the CANYON region: total 1
  69, 9,    // Inn             23

  // Doors in the FIELDS region: total 1
  33, 135,   // Shop            24
  // Doors in the SWAMP region: total  1
  111, 141,  // Shop            25
  // Doors in the FOREST region: total 1
  165, 69,   // shop            26
  // Doors in the CANYON region: total 1
  39,  3,    // Shop            27

  // Doors in the FIELDS region: total 1
  87, 136,   // Battle Cave     28
  // Doors in the SWAMP region: total  1
  159, 106,  // Battle Cave     29
  // Doors in the FOREST region: total 1
  177, 10,   // Battle Cave     30
  // Doors in the CANYON region: total 1
  9, 10,    // Battle Cave     31

  // Doors in the FIELDS region: total 4
  51,  99,   // House           32
  81, 117,   // House           33
  15, 153,   // house           34
  69, 159,   // House           35
  // Doors in the SWAMP region: total  3
  117, 141,  // House           36
  153, 153,  // House           37
  159, 153,  // House           38
  // Doors in the FOREST region: total 4
  165,  9,   // House           39
  123, 15,   // House           40
  177, 45,   // House           41
  123, 63,   // House           42
  // Doors in the CANYON region: total 5
  /*3 ,  2,    // House           43
  51, 14,    // House           44
  45, 38,    // House           45
  3 , 56,    // House           46
  69, 68,    // House           47*/

  // Doors in the FIELDS region: total 1
  9 , 153,   // Your Home       43


  // interior doors that lead back to the map
  // ========================================
  // 6 Doors in the interior region
  21 , 191,   // Your interior  44
  45 , 191,   // Tree interior  45
  69 , 191,   // Shop interior  46
  93 , 191,   // Cave interior  47
  117, 191,   // Inn interior   48
  141, 191,   // House interior 49

  // Extra shop in canyons
  63,   9    // Extra shop in canyons 50
};


////////// transition /////////////////////
///////////////////////////////////////////
const unsigned char PROGMEM transitionSet[] =
{
  // width, height,
  8, 8,
  // FRAME 00
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  // FRAME 01
  0x00, 0x55, 0x00, 0x55, 0x00, 0x55, 0x00, 0x55,
  // FRAME 02
  0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff,
  // FRAME 03
  0xaa, 0xff, 0xaa, 0xff, 0xaa, 0xff, 0xaa, 0xff,
  // FRAME 04
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  // FRAME 05
  0xff, 0xaa, 0xff, 0xaa, 0xff, 0xaa, 0xff, 0xaa,
  // FRAME 06
  0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00,
  // FRAME 07
  0x55, 0x00, 0x55, 0x00, 0x55, 0x00, 0x55, 0x00,
};


////////// mini map sheet /////////////////
///////////////////////////////////////////
const unsigned char PROGMEM miniMapSheet[] =
{
  // width, height,
  8, 8,
  // TILE 00 FOG BLACK
  0xaa, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00,
  // TILE 01 CANYONS
  0xff, 0x9f, 0x87, 0xb9, 0xfe, 0xf9, 0xe7, 0x9f,
  // TILE 02 FOREST
  0xff, 0xf3, 0xe1, 0xa0, 0x80, 0xa0, 0xe1, 0xf3,
  // TILE 03 SWAMP
  0x22, 0x44, 0x44, 0x22, 0x22, 0x44, 0x44, 0x22,
  // TILE 04 FIELDS
  0xf5, 0xca, 0xf5, 0xff, 0xd7, 0x2b, 0xd7, 0xff,
  // TILE 05 BIG TREE
  0xff, 0x83, 0xc1, 0xe1, 0xf1, 0xf9, 0x83, 0xff,
  // TILE 06 BOSS
  0xff, 0xf1, 0xcc, 0xa8, 0xa0, 0xa8, 0xcc, 0xf1,
  // TILE 07 HOUSE
  0xff, 0x87, 0xb3, 0x81, 0x91, 0x93, 0x87, 0xff,
  // TILE 08 OPEN TERRAIN
  0xff, 0xfd, 0xff, 0xbf, 0xff, 0xff, 0xf7, 0xff,
};

const unsigned char PROGMEM miniMapPlayer[] =
{
  // width, height,
  8, 8,
  // FRAME 00
  0xc7, 0xc3, 0x01, 0x8d, 0x15, 0x1d, 0xd5, 0xff,
  // FRAME 01
  0xe3, 0xe1, 0xc0, 0x06, 0x4a, 0xce, 0xea, 0xff,
  // FRAME 02
  0xe3, 0xe2, 0xc0, 0x46, 0x0a, 0x8e, 0xea, 0xff,
  // FRAME 03
  0xc7, 0xc5, 0x00, 0x0d, 0x94, 0x1d, 0x94, 0xff,
};

////////////////// People /////////////////
///////////////////////////////////////////

const unsigned char PROGMEM peopleHead_plus_mask[] =
{
  // width, height,
  14, 8,
  // FRAME 00
  0x00, 0x00, 0x00, 0xc0, 0xc0, 0xf8, 0x80, 0xff, 0xc0, 0xfe, 0x60, 0xfe, 0xc0, 0xff,
  0xc0, 0xff, 0x60, 0xfe, 0xc0, 0xfe, 0x80, 0xff, 0xc0, 0xf8, 0x00, 0xc0, 0x00, 0x00,

  // FRAME 01
  0x00, 0x18, 0x10, 0xf8, 0xd0, 0xfc, 0x2c, 0xfe, 0xae, 0xff, 0x2e, 0xff, 0xbe, 0xff,
  0xbe, 0xff, 0x2e, 0xff, 0xae, 0xff, 0x2c, 0xfe, 0xd0, 0xfc, 0x10, 0xf8, 0x00, 0x18,

  // FRAME 02
  0x00, 0x00, 0x00, 0xc0, 0x80, 0xf0, 0x70, 0xf8, 0xb8, 0xfc, 0x5c, 0xfe, 0xbc, 0xfe,
  0xbc, 0xfe, 0x5c, 0xfe, 0xb8, 0xfc, 0x70, 0xf8, 0x80, 0xf0, 0x00, 0xc0, 0x00, 0x00,

  // FRAME 03
  0x00, 0x00, 0x00, 0xc0, 0xc0, 0xf8, 0x38, 0xfc, 0x5c, 0xfe, 0x5e, 0xff, 0xbe, 0xff,
  0xbe, 0xff, 0x5e, 0xff, 0x5c, 0xfe, 0x38, 0xfc, 0xc0, 0xf8, 0x00, 0xc0, 0x00, 0x00,
};

const unsigned char PROGMEM npcBody_plus_mask[] =
{
  // width, height,
  10, 8,
  // FRAME 00
  0x00, 0x00, 0x00, 0x7f, 0x3c, 0xff, 0x38, 0xff, 0x00, 0x7f,
  0x28, 0x7f, 0x38, 0xff, 0x3c, 0xff, 0x00, 0x7f, 0x00, 0x00,

  // FRAME 01
  0x00, 0x00, 0x00, 0x7f, 0x40, 0xff, 0x10, 0xff, 0x20, 0x7f,
  0x20, 0x7f, 0x10, 0xff, 0x40, 0xff, 0x00, 0x7f, 0x00, 0x00,

  // FRAME 02
  0x00, 0x00, 0x00, 0x7f, 0x6c, 0xff, 0x58, 0xff, 0x50, 0xff,
  0x50, 0xff, 0x58, 0xff, 0x6c, 0xff, 0x00, 0x7f, 0x00, 0x00,

  // FRAME 03
  0x00, 0x60, 0x60, 0xff, 0x7c, 0xff, 0x78, 0xff, 0x70, 0xff,
  0x70, 0xff, 0x78, 0xff, 0x7c, 0xff, 0x60, 0xff, 0x00, 0x60,

  // FRAME 04
  /*0x00, 0x60, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff,
  0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0x60,*/
};


const unsigned char PROGMEM npcHead_plus_mask[] =
{
  // width, height,
  16, 16,
  // HEAD 00
  0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x80, 0xf8, 0x78, 0xfc, 0xbc, 0xfe, 0x5e, 0xff, 0xee, 0xff,
  0xee, 0xff, 0x5e, 0xff, 0xbc, 0xfe, 0x78, 0xfc, 0x80, 0xf8, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x03, 0x03, 0x07, 0x02, 0x07, 0x00, 0x03, 0x01, 0x03, 0x02, 0x07, 0x03, 0x07,
  0x03, 0x07, 0x02, 0x07, 0x01, 0x03, 0x00, 0x03, 0x02, 0x07, 0x03, 0x07, 0x00, 0x03, 0x00, 0x00,

  // HEAD 01
  0x00, 0x00, 0x00, 0x18, 0x10, 0xf8, 0xd0, 0xfc, 0x2c, 0xfe, 0xae, 0xff, 0x3e, 0xff, 0xbe, 0xff,
  0xbe, 0xff, 0x3e, 0xff, 0xae, 0xff, 0x2c, 0xfe, 0xd0, 0xfc, 0x10, 0xf8, 0x00, 0x18, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x01, 0x03, 0x03, 0x07, 0x03, 0x07,
  0x03, 0x07, 0x03, 0x07, 0x01, 0x03, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

  // HEAD 02
  0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0xf0, 0x00, 0xf8, 0xa8, 0xfc, 0xbc, 0xfe, 0x7c, 0xfe,
  0x7c, 0xfe, 0xbc, 0xfe, 0xa8, 0xfc, 0x00, 0xf8, 0x80, 0xf0, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x03, 0x00, 0x03, 0x01, 0x07, 0x05, 0x0f, 0x06, 0x0f,
  0x06, 0x0f, 0x05, 0x0f, 0x01, 0x07, 0x00, 0x03, 0x01, 0x03, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,

  // HEAD 03
  /*0x00, 0x00, 0x00, 0x00, 0x00, 0xc8, 0xc0, 0xfd, 0x80, 0xff, 0xf0, 0xff, 0x70, 0xff, 0xe0, 0xff,
  0xe0, 0xff, 0x40, 0xff, 0xc0, 0xff, 0x80, 0xfe, 0xc0, 0xfc, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x01, 0x03, 0x02, 0x07, 0x03, 0x07,
  0x03, 0x07, 0x02, 0x07, 0x01, 0x03, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,*/

  // HEAD 04
  0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0xf0, 0x20, 0xf8, 0xd8, 0xfc, 0x7c, 0xfe, 0xfc, 0xfe,
  0xfc, 0xfe, 0x7c, 0xfe, 0xd8, 0xfc, 0x20, 0xf8, 0x80, 0xf0, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x03, 0x00, 0x07, 0x06, 0x0f, 0x0d, 0x7f, 0x3d, 0x7f,
  0x3d, 0x7f, 0x1d, 0x3f, 0x06, 0x1f, 0x00, 0x07, 0x01, 0x03, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,

  // HEAD 05
  /*0x00, 0x60, 0x00, 0xf0, 0x00, 0xf0, 0x80, 0xf0, 0x40, 0xf8, 0x88, 0xfc, 0x28, 0xfe, 0xe8, 0xff,
  0xa8, 0xff, 0x28, 0xff, 0x88, 0xff, 0x40, 0xff, 0x80, 0xf6, 0x00, 0xf4, 0x00, 0xf0, 0x00, 0x60,
  0x00, 0x00, 0x00, 0x0e, 0x0e, 0x1f, 0x07, 0x0f, 0x0c, 0x1f, 0x03, 0x0f, 0x01, 0x07, 0x07, 0x0f,
  0x03, 0x07, 0x01, 0x07, 0x03, 0x0f, 0x0c, 0x1f, 0x07, 0x0f, 0x0e, 0x1f, 0x00, 0x0e, 0x00, 0x00,*/
};

const unsigned char PROGMEM npcHands_plus_mask[] =
{
  // width, height,
  12, 8,
  // FRAME 00
  0x00, 0x06, 0x06, 0x0f, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x06, 0x0f, 0x00, 0x06,
};




#endif

